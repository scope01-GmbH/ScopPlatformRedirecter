(function(){var e={436:function(){let{Component:e}=Shopware;Shopware.Component.extend("scop-platform-redirect-create","scop-platform-redirect-details",{methods:{getRedirect(){this.redirect=this.repository.create(Shopware.Context.api),this.redirect.httpCode=302,this.redirect.enabled=!0},onClickSave(){if(this.redirect.sourceURL===this.redirect.targetURL){this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.detail.errorSameUrlDescription")});return}if(!this.redirect.sourceURL){this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.detail.errorEmptySourceURL")});return}if(!this.redirect.targetURL){this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.detail.errorEmptyTargetURL")});return}this.isLoading=!0,this.repository.save(this.redirect,Shopware.Context.api).then(()=>{this.isLoading=!1,this.processSuccess=!0}).catch(e=>{this.isLoading=!1,this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:e})})}}})}},t={};function r(i){var o=t[i];if(void 0!==o)return o.exports;var a=t[i]={exports:{}};return e[i](a,a.exports,r),a.exports}r.p="bundles/scopplatformredirecter/",window?.__sw__?.assetPath&&(r.p=window.__sw__.assetPath+"/bundles/scopplatformredirecter/"),function(){"use strict";let e=Shopware.Data.Criteria,{Component:t,Mixin:i}=Shopware;Shopware.Component.register("scop-platform-redirect-list",{template:'{% block scop_platform_redirect_list %}\n    <sw-page class="scop-platform-redirect-list">\n        <template #smart-bar-actions>\n            {% block scop_platform_redirect_list_smarbar %}\n                <sw-button variant="primary" :routerLink="{name: \'scop.platform.redirect.create\'}">\n                    {{ $t(\'scopplatformredirecter.list.createButton\') }}\n                </sw-button>\n                <sw-button @click="onClickExport" :isLoading="exportLoading" :disabled="noRedirect">\n                    {{ $t(\'scopplatformredirecter.list.exportAllButton\') }}\n                </sw-button>\n                <sw-button @click="onClickImport">\n                    {{ $t(\'scopplatformredirecter.list.importButton\') }}\n                </sw-button>\n                <sw-button class="mt-external-link" variant="contrast" :link="$tc(\'scopplatformredirecter.list.faqButton.link\')">\n                    {{ $t(\'scopplatformredirecter.list.faqButton.text\') }} <sw-icon name="regular-external-link" small="true"/>\n                </sw-button>\n            {% endblock %}\n        </template>\n        <template #content>\n            {% block scop_platform_redirect_list_content %}\n                <sw-entity-listing\n                        v-if="redirect"\n                        :items="redirect"\n                        :repository="repository"\n                        :columns="columns"\n                        detailRoute="scop.platform.redirect.details"\n                        @update-records="onUpdate"\n                >\n                    <template #column-queryParamsHandling="{ item }">\n                        {{ $tc(\'scopplatformredirecter.list.queryParamsHandlingValues.\' + item.queryParamsHandling) }}\n                    </template>\n                    <template #column-salesChannel="{ item }">\n                        {{ item.salesChannel ? item.salesChannel.translated.name : $tc(\'scopplatformredirecter.list.allSalesChannels\') }}\n                    </template>\n                </sw-entity-listing>\n            {% endblock %}\n            {% block scop_platform_redirect_list_view_import_modal %}\n                <scop-platform-redirect-import-modal\n                        :show="showImport"\n                        @close="closeImport"\n                        @updateList="updateList"\n                >\n                </scop-platform-redirect-import-modal>\n            {% endblock %}\n        </template>\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory","syncService","loginService"],mixins:[i.getByName("notification")],data(){return{repository:null,redirect:null,exportLoading:!1,noRedirect:!0,showImport:!1,page:1,limit:25}},metaInfo(){return{title:this.$createTitle()}},computed:{columns(){return[{property:"sourceURL",dataIndex:"sourceURL",label:this.$tc("scopplatformredirecter.list.columnSourceUrl"),routerLink:"scop.platform.redirect.details",inlineEdit:"string",allowResize:!0,primary:!0},{property:"targetURL",dataIndex:"targetURL",label:this.$tc("scopplatformredirecter.list.columnTargetUrl"),inlineEdit:"string",allowResize:!0},{property:"httpCode",dataIndex:"httpCode",label:this.$tc("scopplatformredirecter.list.columnHttpCode"),allowResize:!0},{property:"enabled",dataIndex:"enabled",label:this.$tc("scopplatformredirecter.list.columnEnabled"),inlineEdit:"boolean"},{property:"queryParamsHandling",dataIndex:"queryParamsHandling",label:this.$tc("scopplatformredirecter.list.columnQueryParamsHandling"),allowResize:!0},{property:"salesChannel",dataIndex:"salesChannel",label:this.$tc("scopplatformredirecter.list.salesChannel"),allowResize:!0}]}},created(){this.repository=this.repositoryFactory.create("scop_platform_redirecter_redirect");let t=new e(this.page,this.limit);t.addAssociation("salesChannel"),this.repository.search(t,Shopware.Context.api).then(e=>{this.redirect=e})},methods:{async onClickExport(){this.exportLoading=!0;let e={Authorization:`Bearer ${this.loginService.getToken()}`},t=this.syncService.httpClient,r=await t.post("/_action/scop/platform/redirecter/prepare-export",{},{headers:e}).catch(e=>{this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.list.fileNotCreated")}),this.exportLoading=!1});if(this.exportLoading){if(this.exportLoading=!1,200!==r.status){this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.list.fileNotCreated")});return}await window.open(t.defaults.baseURL+"/_action/scop/platform/redirecter/download-export?filename="+r.data.file,"_blank")}},onUpdate(e){this.noRedirect=0===e.length},onClickImport(){this.showImport=!0},closeImport(){this.showImport=!1},updateList(){let e=this.redirect.criteria;this.repository.search(e,Shopware.Context.api).then(e=>{this.redirect=e})}}});let{Component:o,Mixin:a}=Shopware;o.register("scop-platform-redirect-details",{template:'{% block scop_platform_redirect_details %}\n    <sw-page class="scop-platform-redirect-details">\n        <template #smart-bar-actions>\n            <sw-button :routerLink="{name: \'scop.platform.redirect.list\'}">\n                {{ $t(\'scopplatformredirecter.detail.cancelButton\') }}</sw-button>\n            <sw-button-process :isLoading="isLoading"\n                               :processSuccess="processSuccess" variant="primary"\n                               @update:processSuccess="saveFinish" @click="onClickSave">\n                {{ $t(\'scopplatformredirecter.detail.saveButton\') }}</sw-button-process>\n        </template>\n        <template #content>\n            <sw-card-view>\n                <sw-card v-if="redirect" :isLoading="isLoading">\n                    <sw-text-field :label="$t(\'scopplatformredirecter.detail.sourceUrlLabel\')" v-model:value="redirect.sourceURL"\n                              validation="required"></sw-text-field>\n                    <sw-text-field :label="$t(\'scopplatformredirecter.detail.targetUrlLabel\')" v-model:value="redirect.targetURL"\n                              validation="required"></sw-text-field>\n                    <sw-select-field :label="$t(\'scopplatformredirecter.detail.httpCodeLabel\')"\n                                            v-model:value="redirect.httpCode" validation="required" @update:value="transformHttpCodeValueToNumber">\n                        <option value=301>{{ $t(\'scopplatformredirecter.detail.httpCodeLabelValues.301\') }}</option>\n                        <option value=302>{{ $t(\'scopplatformredirecter.detail.httpCodeLabelValues.302\') }}</option>\n                    </sw-select-field>\n                    <sw-switch-field :label="$tc(\'scopplatformredirecter.detail.enabledLabel\')"\n                                     v-model:value="redirect.enabled" validation="required"></sw-switch-field>\n                    <sw-select-field :label="$t(\'scopplatformredirecter.detail.queryParamsHandling\')"\n                                            v-model:value="redirect.queryParamsHandling" validation="required" @update:value="transformQueryFieldValueToNumber">\n                        <option value=0>{{ $t(\'scopplatformredirecter.detail.queryParamsHandlingValues.consider\') }}</option>\n                        <option value=1>{{ $t(\'scopplatformredirecter.detail.queryParamsHandlingValues.ignore\') }}</option>\n                        <option value=2>{{ $t(\'scopplatformredirecter.detail.queryParamsHandlingValues.transfer\') }}</option>\n                    </sw-select-field>\n\n                    <sw-entity-single-select v-model:value="redirect.salesChannelId" entity="sales_channel" :resetOption="$t(\'scopplatformredirecter.detail.salesChannel.all\')" :label="$t(\'scopplatformredirecter.detail.salesChannel.select\')"></sw-entity-single-select>\n                </sw-card>\n            </sw-card-view>\n        </template>\n    </sw-page>\n{% endblock %}\n',inject:["repositoryFactory"],mixins:[a.getByName("notification")],metaInfo(){return{title:this.$createTitle()}},data(){return{redirect:null,isLoading:!1,processSuccess:!1,repository:null}},created(){this.repository=this.repositoryFactory.create("scop_platform_redirecter_redirect"),this.getRedirect()},computed:{httpCodeOptions(){return[{value:301,label:this.$tc("scopplatformredirecter.detail.httpCodeLabelValues.301")},{value:302,label:this.$tc("scopplatformredirecter.detail.httpCodeLabelValues.302")}]},queryParamsHandlingOptions(){return[{value:0,label:this.$tc("scopplatformredirecter.detail.queryParamsHandlingValues.consider")},{value:1,label:this.$tc("scopplatformredirecter.detail.queryParamsHandlingValues.ignore")},{value:2,label:this.$tc("scopplatformredirecter.detail.queryParamsHandlingValues.transfer")}]}},methods:{getRedirect(){this.repository.get(this.$route.params.id,Shopware.Context.api).then(e=>{this.redirect=e})},onClickSave(){if(this.redirect.sourceURL===this.redirect.targetURL){this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.detail.errorSameUrlDescription")});return}if(!this.redirect.sourceURL){this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.detail.errorEmptySourceURL")});return}if(!this.redirect.targetURL){this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.detail.errorEmptyTargetURL")});return}this.isLoading=!0,this.repository.save(this.redirect,Shopware.Context.api).then(()=>{this.getRedirect(),this.isLoading=!1,this.processSuccess=!0}).catch(e=>{this.isLoading=!1,this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:e})})},saveFinish(){this.processSuccess=!1,this.$router.push({name:"scop.platform.redirect.list"})},transformQueryFieldValueToNumber(){this.redirect.queryParamsHandling=Number(this.redirect.queryParamsHandling)},transformHttpCodeValueToNumber(){this.redirect.httpCode=Number(this.redirect.httpCode)}}}),r(436);let{Component:l,Mixin:s}=Shopware;l.register("scop-platform-redirect-import-modal",{template:'{% block scop_platform_redirect_import_modal %}\n    <div class="scop-platform-redirect-import-modal">\n        <sw-modal\n                v-if="show"\n                class="scop-platform-redirect-import-modal"\n                :title="$tc(\'scopplatformredirecter.list.importModal.title\')"\n                variant="small"\n                @modal-close="onClose"\n        >\n            {% block scop_platform_redirect_import_modal_content %}\n\n                <sw-card :hero="true" :isLoading="processing">\n                    <sw-file-input\n                            v-model:value="selectedFile"\n                            :maxFileSize="8*1024*1024"\n                            @update:value="onFileChange">\n                    </sw-file-input>\n                </sw-card>\n            {% endblock %}\n            {% block scop_platform_redirect_import_modal_options %}\n                <sw-switch-field\n                        :label="$tc(\'scopplatformredirecter.list.importModal.overrideID\')"\n                        v-model:value="overrideID"\n                        :help-text="$tc(\'scopplatformredirecter.list.importModal.overrideIDHelp\')"\n                ></sw-switch-field>\n                <sw-switch-field\n                        :label="$tc(\'scopplatformredirecter.list.importModal.override\')"\n                        v-model:value="override"\n                        :help-text="$tc(\'scopplatformredirecter.list.importModal.overrideHelp\')"\n                ></sw-switch-field>\n            {% endblock %}\n            {% block scop_platform_redirect_import_modal_footer %}\n                <template #modal-footer>\n                    <sw-button @click="onClose" :disabled="processing">\n                        {{ $t(\'scopplatformredirecter.list.importModal.cancel\') }}\n                    </sw-button>\n                    <sw-button variant="primary" :disabled="noFile" :isLoading="processing" @click="startImport">\n                        {{ $t(\'scopplatformredirecter.list.importModal.import\') }}\n                    </sw-button>\n                </template>\n            {% endblock %}\n        </sw-modal>\n    </div>\n{% endblock %}\n',inject:["syncService","loginService"],mixins:[s.getByName("notification")],data(){return{selectedFile:null,noFile:!0,processing:!1,override:!1,overrideID:!0}},props:{show:{type:Boolean,required:!0,default:!1}},metaInfo(){return{title:this.$createTitle()}},methods:{onClose(){this.processing||this.$emit("close")},onFileChange(e){this.file=e,this.noFile=null==e},async startImport(){this.processing=!0;let e=new FormData;e.set("file",this.file),e.set("overrideID",this.overrideID),e.set("override",this.override);let t={Authorization:`Bearer ${this.loginService.getToken()}`},r=this.syncService.httpClient,i=await r.post("/_action/scop/platform/redirecter/import",e,{headers:t}).catch(e=>{this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.list.fileNotImported")}),this.processing=!1});if(this.processing){if(200!==i.status||"File Imported!"!==i.data.detail){"Invalid File"===i.data.detail?this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.list.invalidFile")}):"File is not a Redirects Export"===i.data.detail?this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.list.invalidCsvFile")}):this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.list.fileNotImported")}),this.processing=!1,this.$emit("updateList");return}i.data.error>0?this.createNotification({title:this.$tc("scopplatformredirecter.list.importDone"),message:this.$tc("scopplatformredirecter.list.fileImportedError",0,{amount:i.data.amount,skipped:i.data.skipped,error:i.data.error})}):i.data.skipped>0?this.createNotification({title:this.$tc("scopplatformredirecter.list.importDone"),message:this.$tc("scopplatformredirecter.list.fileImported",0,{amount:i.data.amount,skipped:i.data.skipped})}):this.createNotification({title:this.$tc("scopplatformredirecter.list.importDone"),message:this.$tc("scopplatformredirecter.list.fileImportedNoSkip",0,{amount:i.data.amount})}),this.processing=!1,this.$emit("updateList"),this.$emit("close")}}}});var n=JSON.parse('{"scopplatformredirecter":{"general":{"title":"Weiterleitungen","errorTitle":"Fehler"},"list":{"columnSourceUrl":"Quell URL","columnTargetUrl":"Ziel URL","columnHttpCode":"HTTP Status Code","columnEnabled":"Aktiviert","columnQueryParamsHandling":"Umgang mit Query Parametern","createButton":"Weiterleitung anlegen","exportAllButton":"Alle Exportieren","importButton":"Importieren","faqButton":{"text":"FAQ","link":"https://scope01.com/shopware-redirect-plugin/"},"fileNotCreated":"Die Datei konnte nicht erstellt werden","fileNotImported":"Die Datei konnte nicht importiert werden","invalidFile":"Ung\xfcltige Datei (Es muss sich um eine .csv Datei handeln)","invalidCsvFile":"Ung\xfcltige .csv Datei","importDone":"Import abgeschlossen","fileImportedNoSkip":"Es wurden {amount} Weiterleitungen importiert","fileImported":"Es wurden {amount} Weiterleitungen importiert.<br>{skipped} Weiterleitungen wurden nicht importiert, da sie bereits vorhanden waren und nicht \xfcberschrieben werden sollten","fileImportedError":"Es wurden {amount} Weiterleitungen importiert.<br>{skipped} Weiterleitungen wurden nicht importiert, da sie bereits vorhanden waren und nicht \xfcberschrieben werden sollten.<br><b>{error} Weiterleitungen in der Datei sind ung\xfcltig!</b>","importModal":{"title":"Importieren","cancel":"Abbrechen","import":"Importieren","override":"Bei gleicher Quell URL \xfcberschreiben","overrideHelp":"Ist die Quell URL bereits vorhanden, wird mit dieser Option das vorhandene Ziel sowie der vorhandene HTTP Status Code \xfcberschrieben.","overrideID":"Bei gleicher ID \xfcberschreiben","overrideIDHelp":"Ist die ID bereits vorhanden, wird mit dieser Option der vorhandene Eintrag \xfcberschrieben."},"queryParamsHandlingValues":{"0":"Ber\xfccksichtigen","1":"Ignorieren","2":"\xdcbernehmen"},"salesChannel":"Verkaufskanal","allSalesChannels":"Alle"},"detail":{"sourceUrlLabel":"Quell URL","targetUrlLabel":"Ziel URL","httpCodeLabel":"HTTP Status Code","enabledLabel":"Aktiviert","queryParamsHandling":"Umgang mit Query Parametern","queryParamsHandlingValues":{"consider":"Query Parameter bei der Suche ber\xfccksichtigen","ignore":"Query Parameter bei der Suche ignorieren","transfer":"Query Parameter bei der Suche ignorieren und zur Ziel-URL hinzuf\xfcgen"},"cancelButton":"Abbrechen","saveButton":"Speichern","errorSameUrlDescription":"Die Quell URL und Ziel URL d\xfcrfen nicht gleich sein","errorEmptySourceURL":"Die Quell URL darf nicht leer sein","errorEmptyTargetURL":"Die Ziel URL darf nicht leer sein","helpHere":"hier","httpCodeLabelValues":{"301":"301 (Permanent verschoben)","302":"302 (Tempor\xe4r verschoben)"},"salesChannel":{"select":"Verkaufskanal","all":"Alle Verkaufskan\xe4le"}}}}'),c=JSON.parse('{"scopplatformredirecter":{"general":{"title":"Redirects","errorTitle":"Error"},"list":{"columnSourceUrl":"Source URL","columnTargetUrl":"Target URL","columnHttpCode":"HTTP Status Code","columnEnabled":"Enabled","columnQueryParamsHandling":"Query Parameter Handling","createButton":"Add Redirect","exportAllButton":"Export All","importButton":"Import","faqButton":{"text":"FAQ","link":"https://scope01.com/en/shopware-redirect-plugin/"},"fileNotCreated":"The file could not be created","fileNotImported":"The file could not be imported","invalidFile":"Invalid File (It must be a .csv file)","invalidCsvFile":"Invalid .csv File","importDone":"Import finished","fileImportedNoSkip":"{amount} Redirects where imported","fileImported":"{amount} Redirects where imported.<br>{skipped} Redirects where not imported because they already existed and should not be overridden","fileImportedError":"{amount} Redirects where imported.<br>{skipped} Redirects where not imported because they already existed and should not be overridden.<br><b>{error} Redirects in this file are invalid!</b>","importModal":{"title":"Import","cancel":"Cancel","import":"Import","override":"Override same Source URL","overrideHelp":"If a Source URL already exists, the Target URL and the HTTP Status Code will be overridden with this option.","overrideID":"Override same ID","overrideIDHelp":"If the ID already exists, the existing entry will be overridden with this option."},"queryParamsHandlingValues":{"0":"Consider","1":"Ignore","2":"Transfer"},"salesChannel":"Sales Channel","allSalesChannels":"All"},"detail":{"sourceUrlLabel":"Source URL","targetUrlLabel":"Target URL","httpCodeLabel":"HTTP Status Code","enabledLabel":"Enabled","queryParamsHandling":"Query Parameter Handling","queryParamsHandlingValues":{"consider":"Consider Query Parameters during search","ignore":"Ignore Query Parameters during search","transfer":"Ignore Query Parameters during search and add them to the target URL"},"cancelButton":"Cancel","saveButton":"Save","errorSameUrlDescription":"The source URL and target URL must not be the same","errorEmptySourceURL":"The source URL mustn\'t be empty","errorEmptyTargetURL":"The target URL mustn\'t be empty","helpHere":"here","httpCodeLabelValues":{"301":"301 (Moved Permanently)","302":"302 (Moved Temporarily)"},"salesChannel":{"select":"Sales Channel","all":"All Sales Channels"}}}}');Shopware.Module.register("scop-platform-redirect",{type:"plugin",name:"scop-platform-redirect",title:"scopplatformredirecter.general.title",description:"scopplatformredirecter.general.title",color:"#019994",icon:"small-copy",routes:{list:{component:"scop-platform-redirect-list",path:"list"},details:{component:"scop-platform-redirect-details",path:"details/:id",meta:{parentPath:"scop.platform.redirect.list"}},create:{component:"scop-platform-redirect-create",path:"create",meta:{parentPath:"scop.platform.redirect.list"}}},settingsItem:[{to:"scop.platform.redirect.list",group:"shop",icon:"regular-double-chevron-right-s"}],snippets:{"de-DE":n,"en-GB":c}})}()})();