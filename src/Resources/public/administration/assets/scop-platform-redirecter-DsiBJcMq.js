const y="modulepreload",b=function(e){return window.__sw__.assetPath+"/bundles/scopplatformredirecter/administration/"+e},u={},v=function(t,s,p){let d=Promise.resolve();if(s&&s.length>0){document.getElementsByTagName("link");const r=document.querySelector("meta[property=csp-nonce]"),i=(r==null?void 0:r.nonce)||(r==null?void 0:r.getAttribute("nonce"));d=Promise.allSettled(s.map(o=>{if(o=b(o),o in u)return;u[o]=!0;const c=o.endsWith(".css"),h=c?'[rel="stylesheet"]':"";if(document.querySelector(`link[href="${o}"]${h}`))return;const a=document.createElement("link");if(a.rel=c?"stylesheet":y,c||(a.as="script"),a.crossOrigin="",a.href=o,i&&a.setAttribute("nonce",i),document.head.appendChild(a),c)return new Promise((f,g)=>{a.addEventListener("load",f),a.addEventListener("error",()=>g(new Error(`Unable to preload CSS for ${o}`)))})}))}function m(r){const i=new Event("vite:preloadError",{cancelable:!0});if(i.payload=r,window.dispatchEvent(i),!i.defaultPrevented)throw r}return d.then(r=>{for(const i of r||[])i.status==="rejected"&&m(i.reason);return t().catch(m)})},w=`{% block scop_platform_redirect_list %} <sw-page class="scop-platform-redirect-list"> <template #search-bar> <sw-search-bar initial-search-type="scop_platform_redirecter_redirect" :initial-search="term" @search="onSearch" /> </template> <template #smart-bar-actions> {% block scop_platform_redirect_list_smarbar %} <mt-button variant="primary" @click="$router.push({name: 'scop.platform.redirect.create'})"> {{ $t('scopplatformredirecter.list.createButton') }} </mt-button> <mt-button variant="secondary" @click="onClickExport" :isLoading="exportLoading" :disabled="noRedirect"> {{ $t('scopplatformredirecter.list.exportAllButton') }} </mt-button> <mt-button variant="secondary" @click="onClickImport"> {{ $t('scopplatformredirecter.list.importButton') }} </mt-button> <mt-button class="mt-external-link" variant="action" :link="$tc('scopplatformredirecter.list.faqButton.link')"> {{ $t('scopplatformredirecter.list.faqButton.text') }} <sw-icon name="regular-external-link" small="true"/> </mt-button> {% endblock %} </template> <template #content> {% block scop_platform_redirect_list_content %} <sw-entity-listing ref="listing" v-if="redirect" :items="redirect" :repository="repository" :columns="columns" detailRoute="scop.platform.redirect.details" @update-records="onUpdate" @inline-edit-save="onInlineEditSave" > <template #column-queryParamsHandling="{ item }"> {{ $tc('scopplatformredirecter.list.queryParamsHandlingValues.' + item.queryParamsHandling) }} </template> <template #column-salesChannel="{ item }"> {{ item.salesChannel ? item.salesChannel.translated.name : $tc('scopplatformredirecter.list.allSalesChannels') }} </template> </sw-entity-listing> {% endblock %} {% block scop_platform_redirect_list_view_import_modal %} <scop-platform-redirect-import-export-modal :show="showImportExportModal" :type="modalType" @close="closeImportExport" @updateList="updateList" > </scop-platform-redirect-import-export-modal> {% endblock %} </template> </sw-page> {% endblock %}`,_=Shopware.Data.Criteria,{Component:A,Mixin:C}=Shopware;Shopware.Component.register("scop-platform-redirect-list",{template:w,inject:["repositoryFactory","syncService","loginService","importExport"],mixins:[C.getByName("notification")],data(){return{repository:null,redirect:null,exportLoading:!1,noRedirect:!0,showImportExportModal:!1,modalType:"export",page:1,limit:25,searchConfigEntity:"scop_platform_redirecter_redirect",entitySearchable:!0}},metaInfo(){return{title:this.$createTitle()}},computed:{columns(){return[{property:"sourceURL",dataIndex:"sourceURL",label:this.$tc("scopplatformredirecter.list.columnSourceUrl"),routerLink:"scop.platform.redirect.details",inlineEdit:"string",allowResize:!0,primary:!0},{property:"targetURL",dataIndex:"targetURL",label:this.$tc("scopplatformredirecter.list.columnTargetUrl"),inlineEdit:"string",allowResize:!0},{property:"httpCode",dataIndex:"httpCode",label:this.$tc("scopplatformredirecter.list.columnHttpCode"),allowResize:!0},{property:"enabled",dataIndex:"enabled",label:this.$tc("scopplatformredirecter.list.columnEnabled"),inlineEdit:"boolean"},{property:"queryParamsHandling",dataIndex:"queryParamsHandling",label:this.$tc("scopplatformredirecter.list.columnQueryParamsHandling"),allowResize:!0},{property:"salesChannel",dataIndex:"salesChannel",label:this.$tc("scopplatformredirecter.list.salesChannel"),allowResize:!0}]}},created(){this.repository=this.repositoryFactory.create("scop_platform_redirecter_redirect");let e=new _(this.page,this.limit);e.addAssociation("salesChannel"),this.repository.search(e,Shopware.Context.api).then(t=>{this.redirect=t}),this.$emit("inline-edit-assign",this.onInlineEditAssign)},methods:{onClickExport(){this.modalType="export",this.showImportExportModal=!0},onUpdate(e){this.noRedirect=e.length===0},onClickImport(){this.modalType="import",this.showImportExportModal=!0},closeImportExport(){this.showImportExportModal=!1},updateList(){const e=this.redirect.criteria;this.repository.search(e,Shopware.Context.api).then(t=>{this.redirect=t})},onInlineEditSave(e,t){if(t.sourceURL.trim()===t.targetURL.trim()&&t.enabled){this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.detail.errorSameUrlDescription")}),t.enabled=!1,t._origin.enabled=!0,e.then(()=>{this.repository.save(t,Shopware.Context.api).then(()=>this.updateList())});return}if(!t.sourceURL){this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.detail.errorEmptySourceURL")}),this.updateList();return}if(!t.targetURL){this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.detail.errorEmptyTargetURL")}),this.updateList();return}return e.catch(()=>{this.updateList(),this.createNotificationError({message:this.$tc("global.notification.notificationSaveErrorMessageRequiredFieldsInvalid")})})}}});const L=`{% block scop_platform_redirect_details %} <sw-page class="scop-platform-redirect-details"> <template #smart-bar-actions> <sw-button size="default" variant="secondary" :routerLink="{name: 'scop.platform.redirect.list'}"> {{ $t('scopplatformredirecter.detail.cancelButton') }}</sw-button> <sw-button-process :isLoading="isLoading" :processSuccess="processSuccess" variant="primary" @update:processSuccess="saveFinish" @click="onClickSave"> {{ $t('scopplatformredirecter.detail.saveButton') }}</sw-button-process> </template> <template #content> <sw-card-view> <sw-card v-if="redirect" :isLoading="isLoading"> <sw-text-field :label="$t('scopplatformredirecter.detail.sourceUrlLabel')" v-model:value="redirect.sourceURL" validation="required"></sw-text-field> <sw-text-field :label="$t('scopplatformredirecter.detail.targetUrlLabel')" v-model:value="redirect.targetURL" validation="required"></sw-text-field> <sw-select-number-field :label="$t('scopplatformredirecter.detail.httpCodeLabel')" v-model:value="redirect.httpCode" validation="required" @update:value="transformHttpCodeValueToNumber"> <option value=301>{{ $t('scopplatformredirecter.detail.httpCodeLabelValues.301') }}</option> <option value=302>{{ $t('scopplatformredirecter.detail.httpCodeLabelValues.302') }}</option> </sw-select-number-field> <sw-switch-field :label="$tc('scopplatformredirecter.detail.enabledLabel')" v-model:value="redirect.enabled" validation="required"></sw-switch-field > <sw-select-number-field :label="$t('scopplatformredirecter.detail.queryParamsHandling')" v-model:value="redirect.queryParamsHandling" validation="required" @update:value="transformQueryFieldValueToNumber"> <option value=0>{{ $t('scopplatformredirecter.detail.queryParamsHandlingValues.consider') }}</option> <option value=1>{{ $t('scopplatformredirecter.detail.queryParamsHandlingValues.ignore') }}</option> <option value=2>{{ $t('scopplatformredirecter.detail.queryParamsHandlingValues.transfer') }}</option> </sw-select-number-field> <sw-entity-single-select v-model:value="redirect.salesChannelId" entity="sales_channel" :resetOption="$t('scopplatformredirecter.detail.salesChannel.all')" :label="$t('scopplatformredirecter.detail.salesChannel.select')"></sw-entity-single-select> </sw-card> </sw-card-view> </template> </sw-page> {% endblock %}`,{Component:x,Mixin:E}=Shopware;x.register("scop-platform-redirect-details",{template:L,inject:["repositoryFactory"],mixins:[E.getByName("notification")],metaInfo(){return{title:this.$createTitle()}},data(){return{redirect:null,isLoading:!1,processSuccess:!1,repository:null}},created(){this.repository=this.repositoryFactory.create("scop_platform_redirecter_redirect"),this.getRedirect()},methods:{getRedirect(){this.repository.get(this.$route.params.id,Shopware.Context.api).then(e=>{this.redirect=e})},onClickSave(){if(this.redirect.sourceURL.trim()===this.redirect.targetURL.trim()){this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.detail.errorSameUrlDescription")});return}if(!this.redirect.sourceURL){this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.detail.errorEmptySourceURL")});return}if(!this.redirect.targetURL){this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.detail.errorEmptyTargetURL")});return}this.isLoading=!0,this.repository.save(this.redirect,Shopware.Context.api).then(()=>{this.getRedirect(),this.isLoading=!1,this.processSuccess=!0}).catch(e=>{this.isLoading=!1,this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:e})})},saveFinish(){this.processSuccess=!1,this.$router.push({name:"scop.platform.redirect.list"})},transformQueryFieldValueToNumber(){this.redirect.queryParamsHandling=Number(this.redirect.queryParamsHandling)},transformHttpCodeValueToNumber(){this.redirect.httpCode=Number(this.redirect.httpCode)}}});const{Component:B}=Shopware;Shopware.Component.extend("scop-platform-redirect-create","scop-platform-redirect-details",{methods:{getRedirect(){this.redirect=this.repository.create(Shopware.Context.api),this.redirect.httpCode=302,this.redirect.enabled=!0},onClickSave(){if(this.redirect.sourceURL===this.redirect.targetURL){this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.detail.errorSameUrlDescription")});return}if(!this.redirect.sourceURL){this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.detail.errorEmptySourceURL")});return}if(!this.redirect.targetURL){this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:this.$tc("scopplatformredirecter.detail.errorEmptyTargetURL")});return}this.isLoading=!0,this.repository.save(this.redirect,Shopware.Context.api).then(()=>{this.isLoading=!1,this.processSuccess=!0}).catch(e=>{this.isLoading=!1,this.createNotificationError({title:this.$tc("scopplatformredirecter.general.errorTitle"),message:e})})}}});const S=`{% block scop_platform_redirect_import_modal %} <div class="scop-platform-redirect-import-export-modal"> <sw-modal v-if="show" class="scop-platform-redirect-import-export-modal" :title="$tc('scopplatformredirecter.list.' + type + 'Modal.title')" variant="large" @modal-close="onClose" > {% block scop_platform_redirect_import_modal_content %} <sw-card :hero="true" :isLoading="processing" v-if="type === 'import'"> <sw-file-input v-model:value="selectedFile" :maxFileSize="8*1024*1024" @update:value="onFileChange"> </sw-file-input> </sw-card> {% endblock %} {% block scop_platform_redirect_import_modal_options %} <sw-entity-single-select :label="$tc('sw-import-export.importer.profileLabel')" :criteria="profileCriteria" entity="import_export_profile" label-property="label" :value="selectedProfileId" required show-clearable-button @update:value="onProfileSelect"></sw-entity-single-select> <div class="scop-platform-redirect-import-export-modal-activity"> <scop-platform-redirect-import-export-activity ref="activityGrid" :type="type"></scop-platform-redirect-import-export-activity> </div> {% endblock %} {% block scop_platform_redirect_import_modal_footer %} <template #modal-footer> <mt-button variant="secondary" @click="onClose" :disabled="processing"> {{ $t('scopplatformredirecter.list.' + type + 'Modal.cancel') }} </mt-button> <mt-button variant="primary" :disabled="noFile && type !== 'export'" :isLoading="processing" @click="startProcess"> {{ $t('scopplatformredirecter.list.' + type + 'Modal.start') }} </mt-button> </template> {% endblock %} </sw-modal> </div> {% endblock %}`,{Component:$,Mixin:R}=Shopware,l=Shopware.Data.Criteria;$.register("scop-platform-redirect-import-export-modal",{template:S,inject:["importExport","repositoryFactory"],compatConfig:Shopware.compatConfig,mixins:[R.getByName("notification")],data(){return{selectedFile:null,noFile:!0,processing:!1,selectedProfileId:null}},props:{show:{type:Boolean,required:!0,default:!1},type:{type:String,required:!0,default:"import"}},emits:["import-started","export-started"],metaInfo(){return{title:this.$createTitle()}},computed:{importExportProfileRepository(){return this.repositoryFactory.create("import_export_profile")},profileCriteria(){const e=new l(1,25);return e.addSorting(l.sort("label")),e.addFilter(l.equals("sourceEntity","scop_platform_redirecter_redirect")),e.addQuery(l.contains("type","import")),e}},created(){const e=new l(1,25);e.addFilter(l.equals("technicalName","default_scop_platform_redirecter_redirect")),this.importExportProfileRepository.search(e).then(t=>{t[0]&&(this.selectedProfileId=t[0].id)})},watch:{},methods:{async activityLoaded(){const e=this.$refs.activityGrid;if(e){const t=e.activityCriteria;t.filters.some(p=>p.field==="profile.sourceEntity")||(t.addFilter(l.equals("profile.sourceEntity","scop_platform_redirecter_redirect")),await e.fetchActivities())}},onClose(){this.processing||this.$emit("close")},onFileChange(e){this.file=e,this.noFile=e==null},onProfileSelect(e){this.selectedProfileId=e},async startProcess(){this.type=="import"?this.startImport():this.type=="export"&&this.startExport()},async startImport(){this.processing=!0;const e=this.selectedProfileId;this.importExport.import(e,this.selectedFile,this.handleProgress).then(()=>{this.selectedFile=null}).catch(t=>{!t.response||!t.response.data||!t.response.data.errors?this.createNotificationError({message:t.message}):t.response.data.errors.forEach(s=>{this.createNotificationError({message:`${s.code}: ${s.detail}`})}),this.processing=!1})},async startExport(){this.processing=!0,this.importExport.export(this.selectedProfileId,this.handleProgress,this.config).catch(e=>{!e.response||!e.response.data||!e.response.data.errors?this.createNotificationError({message:e.message}):e.response.data.errors.forEach(t=>{this.createNotificationError({message:`${t.code}: ${t.detail}`})}),this.processing=!1})},handleProgress(e){e.activity==="export"?(this.createNotificationInfo({message:this.$tc("sw-import-export.exporter.messageExportStarted")}),this.$emit("export-started",e)):e.activity==="import"&&(this.createNotificationInfo({message:this.$tc("sw-import-export.importer.messageImportStarted")}),this.$emit("import-started",e)),this.$refs.activityGrid.addActivity(e),this.$refs.activityGrid.fetchActivities(),this.$emit("updateList"),this.processing=!1}}});const n=Shopware.Data.Criteria,{Component:U}=Shopware;U.extend("scop-platform-redirect-import-export-activity","sw-import-export-activity",{computed:{activityCriteria(){const e=new Shopware.Data.Criteria;return this.type==="import"?e.addFilter(n.multi("OR",[n.equals("activity","import"),n.equals("activity","dryrun")])):this.type==="export"&&e.addFilter(n.equals("activity","export")),e.addFilter(n.equals("profile.sourceEntity","scop_platform_redirecter_redirect")),e.addSorting(n.sort("createdAt","DESC")),e.setPage(1),e.addAssociation("user"),e.addAssociation("file"),e.addAssociation("profile"),e.getAssociation("invalidRecordsLog").addAssociation("file"),e}}});const P={entities:{scop_platform_redirecter_redirect:"Weiterleitungen"}},k={general:{title:"Weiterleitungen",errorTitle:"Fehler"},list:{columnSourceUrl:"Quell URL",columnTargetUrl:"Ziel URL",columnHttpCode:"HTTP Status Code",columnEnabled:"Aktiviert",columnQueryParamsHandling:"Umgang mit Query Parametern",createButton:"Weiterleitung anlegen",exportAllButton:"Alle Exportieren",importButton:"Importieren",faqButton:{text:"FAQ",link:"https://scope01.com/shopware-redirect-plugin/"},fileNotCreated:"Die Datei konnte nicht erstellt werden",fileNotImported:"Die Datei konnte nicht importiert werden",invalidFile:"Ungültige Datei (Es muss sich um eine .csv Datei handeln)",invalidCsvFile:"Ungültige .csv Datei",importDone:"Import abgeschlossen",fileImportedNoSkip:"Es wurden {amount} Weiterleitungen importiert",fileImported:"Es wurden {amount} Weiterleitungen importiert.<br>{skipped} Weiterleitungen wurden nicht importiert, da sie bereits vorhanden waren und nicht überschrieben werden sollten",fileImportedError:"Es wurden {amount} Weiterleitungen importiert.<br>{skipped} Weiterleitungen wurden nicht importiert, da sie bereits vorhanden waren und nicht überschrieben werden sollten.<br><b>{error} Weiterleitungen in der Datei sind ungültig!</b>",importModal:{title:"Importieren",cancel:"Abbrechen",start:"Importieren"},exportModal:{title:"Exportieren",cancel:"Abbrechen",start:"Exportieren"},queryParamsHandlingValues:{0:"Berücksichtigen",1:"Ignorieren",2:"Übernehmen"},salesChannel:"Verkaufskanal",allSalesChannels:"Alle"},detail:{sourceUrlLabel:"Quell URL",targetUrlLabel:"Ziel URL",httpCodeLabel:"HTTP Status Code",enabledLabel:"Aktiviert",queryParamsHandling:"Umgang mit Query Parametern",queryParamsHandlingValues:{consider:"Query Parameter bei der Suche berücksichtigen",ignore:"Query Parameter bei der Suche ignorieren",transfer:"Query Parameter bei der Suche ignorieren und zur Ziel-URL hinzufügen"},cancelButton:"Abbrechen",saveButton:"Speichern",errorSameUrlDescription:"Die Quell URL und Ziel URL dürfen nicht gleich sein",errorEmptySourceURL:"Die Quell URL darf nicht leer sein",errorEmptyTargetURL:"Die Ziel URL darf nicht leer sein",helpHere:"hier",httpCodeLabelValues:{301:"301 (Permanent verschoben)",302:"302 (Temporär verschoben)"},salesChannel:{select:"Verkaufskanal",all:"Alle Verkaufskanäle"}}},I={global:P,scopplatformredirecter:k},T={entities:{scop_platform_redirecter_redirect:"Redirects"}},q={general:{title:"Redirects",errorTitle:"Error"},list:{columnSourceUrl:"Source URL",columnTargetUrl:"Target URL",columnHttpCode:"HTTP Status Code",columnEnabled:"Enabled",columnQueryParamsHandling:"Query Parameter Handling",createButton:"Add Redirect",exportAllButton:"Export All",importButton:"Import",faqButton:{text:"FAQ",link:"https://scope01.com/en/shopware-redirect-plugin/"},fileNotCreated:"The file could not be created",fileNotImported:"The file could not be imported",invalidFile:"Invalid File (It must be a .csv file)",invalidCsvFile:"Invalid .csv File",importDone:"Import finished",fileImportedNoSkip:"{amount} Redirects where imported",fileImported:"{amount} Redirects where imported.<br>{skipped} Redirects where not imported because they already existed and should not be overridden",fileImportedError:"{amount} Redirects where imported.<br>{skipped} Redirects where not imported because they already existed and should not be overridden.<br><b>{error} Redirects in this file are invalid!</b>",importModal:{title:"Import",cancel:"Cancel",start:"Import"},exportModal:{title:"Export",cancel:"Cancel",start:"Export"},queryParamsHandlingValues:{0:"Consider",1:"Ignore",2:"Transfer"},salesChannel:"Sales Channel",allSalesChannels:"All"},detail:{sourceUrlLabel:"Source URL",targetUrlLabel:"Target URL",httpCodeLabel:"HTTP Status Code",enabledLabel:"Enabled",queryParamsHandling:"Query Parameter Handling",queryParamsHandlingValues:{consider:"Consider Query Parameters during search",ignore:"Ignore Query Parameters during search",transfer:"Ignore Query Parameters during search and add them to the target URL"},cancelButton:"Cancel",saveButton:"Save",errorSameUrlDescription:"The source URL and target URL must not be the same",errorEmptySourceURL:"The source URL mustn't be empty",errorEmptyTargetURL:"The target URL mustn't be empty",helpHere:"here",httpCodeLabelValues:{301:"301 (Moved Permanently)",302:"302 (Moved Temporarily)"},salesChannel:{select:"Sales Channel",all:"All Sales Channels"}}},F={global:T,scopplatformredirecter:q};Shopware.Module.register("scop-platform-redirect",{entity:"scop_platform_redirecter_redirect",type:"plugin",name:"scop-platform-redirect",title:"scopplatformredirecter.general.title",description:"scopplatformredirecter.general.title",color:"#019994",icon:"regular-double-chevron-right-s",defaultSearchConfiguration:{_searchable:!0,sourceURL:{_searchable:!0,_score:500},targetURL:{name:{_searchable:!0,_score:500}}},routes:{list:{component:"scop-platform-redirect-list",path:"list"},details:{component:"scop-platform-redirect-details",path:"details/:id",meta:{parentPath:"scop.platform.redirect.list"}},create:{component:"scop-platform-redirect-create",path:"create",meta:{parentPath:"scop.platform.redirect.list"}}},settingsItem:{group:"content",to:"scop.platform.redirect.list",icon:"regular-double-chevron-right-s",privilege:"system.system_config"},snippets:{"de-DE":I,"en-GB":F}});const{Application:H}=Shopware;H.addServiceProviderDecorator("searchTypeService",e=>(e.upsertType("scop_platform_redirecter_redirect",{entityName:"scop_platform_redirecter_redirect",placeholderSnippet:"scopplatformredirecter.general.title",listingRoute:"scop-platform-redirect-list",hideOnGlobalSearchBar:!1}),e));Shopware.Component.override("sw-search-bar-item",()=>v(()=>import("./index-DSLHrO0o.js"),[]));const{Component:N}=Shopware;N.override("sw-import-export-edit-profile-general",{computed:{supportedEntities(){const e=this.$super("supportedEntities");return e.push({value:"scop_platform_redirecter_redirect",label:this.$tc("scopplatformredirecter.general.title"),type:"import-export"}),e}}});
//# sourceMappingURL=scop-platform-redirecter-DsiBJcMq.js.map
